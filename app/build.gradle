apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
/*引入打包脚本*/
apply from: "../packagePgyerUpload.gradle"
/*config.gradle下的android配置信息*/
def androidConfig = rootProject.ext.android
/*
 * 环境配置，用于定义不同的环境，一般在项目里面会有测试环境和正式环境，还可能有其他环境，比如预生产，而为了方便测试，需要打包到不同的地址以免混淆
 * 同时也可以区分不同的应用名提醒测试手上装的包是什么环境的
 * 比如我们项目里面的环境和蒲公英地址的对应关系为如下
 * 1:正式环境
 * 2:测试环境
 * 3:UAT环境
 * 4:其他你需要的环境
 */
def env = "test"
/*蒲公英打包配置信息*/
pgyer {
    /*应用版本，一般情况下我们会有一份配置文件来管理应用的版本和依赖，所以直接引入文件中的版本就好*/
    version rootProject.ext.versionName
    /*
    * 1:正式环境
    * 2:测试环境
    * 3:UAT环境
    * 4:其他你需要的环境
    * 5...根据需求在[packagePygerUpload.gradle]中的apiInfoMap中配置对应关系!!
    * */
    tag 2
    /*风味，根据下面的productFlavors填写，可以根据自己定义的来打包，比如定义某个flavor来动态修改app的后缀或者app名之类的,若填写下面的NewAppId则会根据此风味打包*/
    flavors "NewAppId"
    /*是否打release包，若开启这个，则强制打release环境的配置的包*/
    isRelease false
    /*环境配置，根据上面的env，一般用于控制台展示*/
    environment env
    /*企业微信webhook地址*/
    webhookUrl "你的webhookUrl"
    /*企业微信webhook是否开启*/
    webhookEnabled true
    /*需要@的人，可以配多个，用,隔开*/
    mentionedList ""
}

android {
    signingConfigs {
        config {
            storeFile file('app-sign.jks')
            storePassword '1234567'
            keyAlias 'pyger-test'
            keyPassword '1234567'
        }
    }
    compileSdk androidConfig["compileSdkVersion"]

    defaultConfig {
        applicationId "com.example.demo.android_pgyer_package_upload_demo"
        minSdk androidConfig["minSdkVersion"]
        targetSdk androidConfig["targetSdkVersion"]
        /*读取versions.gradle文件中的配置信息*/
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName
        flavorDimensions "versionCode"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        debug {
            if (env == null) {
                //测试环境
                buildConfigField "String", "SERVER_URL", "\"https://baidu.com/\""
                resValue "string", "app_name", "[TEST]Pyger Upload Demo"
            } else {
                switch (env) {
                    case "pro":
                        //生产环境
                        buildConfigField "String", "SERVER_URL", "\"https://baidu.com/\""
                        resValue "string", "app_name", "Pyger Upload Demo"
                        break
                    case "uat":
                        buildConfigField "String", "SERVER_URL", "\"https://baidu.com/\""
                        resValue "string", "app_name", "[UAT]Pyger Upload Demo"
                        break
                    case "test":
                        //测试环境
                        buildConfigField "String", "SERVER_URL", "\"https://baidu.com/\""
                        resValue "string", "app_name", "[TEST]Pyger Upload Demo"
                        break
                    default:
                        //测试环境
                        buildConfigField "String", "SERVER_URL", "\"https://baidu.com/\""
                        resValue "string", "app_name", "[TEST]Pyger Upload Demo"
                        break
                }
            }
            debuggable true
            jniDebuggable false
            renderscriptDebuggable false
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.config

            android.applicationVariants.all { variant ->
                variant.outputs.all {
                    outputFileName = "PGYER_UPLOAD_${defaultConfig.versionName}_${variant.buildType.name}.apk"
                }
            }
        }
        release {
            buildConfigField "String", "SERVER_URL", "\"https://baidu.com/\""
            resValue "string", "app_name", "Pyger Upload Demo"
            debuggable false
            minifyEnabled true
            zipAlignEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.config

            android.applicationVariants.all { variant ->
                variant.outputs.all {
                    outputFileName = "PGYER_UPLOAD_${defaultConfig.versionName}_${variant.buildType.name}.apk"
                }
            }
        }
    }
    buildTypes {
        debug {

        }
        release {

        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    /*自定义风味来修改applicationId实现多个应用共存*/
    productFlavors {
        NewAppId {
            applicationId "com.example.demo.android.pgyer.package.upload.demo.debug"
        }
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.3.0'
    implementation 'com.google.android.material:material:1.4.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
}